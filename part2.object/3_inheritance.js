/*
    자바스크립트 프로토타입 상속

    자바스크립트는 객체지향 언어, 프토토타입 상속에 기반을 둔 OOP 언어.
    -상속의 필요성
        보모쪽에 정의된 속성과 메서드를 그대로 물려받아 사용가능 -> 재사용
        새로운 기능을 추가해서 기존 기능에서 더 확장시킬 수도 있다.

    -프로토타입 체인
        __proto__: 상속을 해준 부모(원형)을 가리킴(참조).
        자식객체가 __proto__가 가리키는 부모 객체의 멤버를 사용할 수 있다.(상속)
*/

//ex)
let obj1 = {
    name: "홍길동",
    age: 20,
    sayHi: function () {
        console.log("Hi" + this.name);
    },
};

let obj2 = {
    name: "이순신",
};

//obj2객체의 __proto__속성이 가리키는 것은? -> 최상위 object
//__proto__속성이 가리키는 것을 바꿀 수 있는가? -> yes
obj2.__proto__ = obj1;

/*
    빈 객체 생성 후 __proto__속성에 원하는 객체를 할당 -> 상속
*/
let obj3 = {};
obj3.__proto__ = obj2;

/*
    정리
    1. js는 자신에게 없는 특성을 __proto__가 가리키는 원형에서 가져온다.
    2. 맨 하위 객체부터 순차적으로 연결되어있는 원형을 찾아간다 -> 프로토타입 체인
    3. __proto__속성이 가리키는 원형이 상속을 해준 부모
    4. js는 프로토타입 체인을 사용하여 객체의 특성을 다른 객체로 전파한다 -> 프로토타입 상속
    5. 프로토타입 상속을 구현하는 객체지향 언어를 프로토타입 기반의 객체지향 언어라 한다.
*/
